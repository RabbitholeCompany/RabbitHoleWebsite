---
export const prerender = true;

import { Icon } from "astro-icon";
import { Picture } from "@astrojs/image/components";

interface Item {
  name?: string;
  position?: string;
  image?: string | any;
}

export interface Props {
  title?: string;
  subtitle?: string;
  highlight?: string;
  items: Array<Item>;
}

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  highlight,
  items = [],
} = Astro.props;
---

<section class="relative not-prose mb-14">
  <div
    class="absolute inset-0 bg-purple-50 dark:bg-slate-800 pointer-events-none mb-32"
    aria-hidden="true">
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 -mb-12">
    <div class="py-4 pt-8 sm:py-6 lg:py-8 lg:pt-12">
      {
        (title || subtitle || highlight) && (
          <div class="mb-8 md:mx-auto text-center max-w-3xl">
            {highlight && (
              <p
                class="text-base text-primary dark:text-blue-200 font-semibold tracking-wide uppercase"
                set:html={highlight}
              />
            )}
            {title && (
              <h2
                class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
                set:html={title}
              />
            )}

            {subtitle && (
              <p
                class="max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400"
                set:html={subtitle}
              />
            )}
          </div>
        )
      }
      <div
        class={`grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 my-14 dark:text-white items-stretch`}>
        {
          items.map(({ name, position, image }) => (
            <div class="relative flex flex-col p-6 bg-white rounded shadow-lg hover:shadow-xl transition border border-transparent dark:border-slate-800 rounded-2xl">
              <div class="flex items-center">
                {image && (
                  <div class="relative m-auto max-w-sm mt-4">
                    {typeof image == "string" ? (
                      <Fragment set:html={image} />
                    ) : (
                      <Picture
                        class="mx-auto rounded-2xl w-min"
                        widths={[120, 200, 280, 360]}
                        sizes="220px"
                        aspectRatio={1}
                        loading="eager"
                        width={360}
                        height={360}
                        {...image}
                      />
                    )}
                  </div>
                )}
              </div>
              <div class="text-xl font-bold text-center mt-6">{name}</div>
              {position && (
                <p
                  class="text-muted dark:text-gray-400 text-md text-center"
                  set:html={position}
                />
              )}
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
